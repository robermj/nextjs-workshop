import { useState, useEffect } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import Layout from '../../components/Layout/Layout'
import MovieDeatils from '../../components/Movies/MovieDetails'

const _getMoviesData = async () => {
  const response = await fetch(`https://movies-71584-default-rtdb.firebaseio.com/movies.json`)
  const data = await response.json()

  return data
}

export const getStaticPaths = async () => {
  const data = await _getMoviesData()
  const moviesIdsPaths = Object.keys(data).map((movieId) => ({ params : { id: movieId }}))

  return {
    paths: [...moviesIdsPaths],
    fallback: true
  }
}

export const getStaticProps = async (context) => {
  try {
    const { params } = context
    const { id } = params
    if (id) {
      const data = await _getMoviesData()
      const currentMovie = data[id]

      if(!currentMovie) {
        return {
          notFound: true
        }
      }

      return {
        props: {
          movie: { ...currentMovie }
        },
        revalidate: 60
      }
    }
  } catch (error) {
    return {
      props: {
        movie: currentMovie
      }
    }
  }
}

const MovieDetail = ({ movie }) => {
  /*const { query } = useRouter()
  const [movie, setMovie] = useState({})
  const currentMovieId = query?.id

  const _getMovie = async () => {
    try {
      if (currentMovieId) {
        const response = await fetch(`https://movies-71584-default-rtdb.firebaseio.com/movies.json`)
        const data = await response.json()
        const currentMovie = data[currentMovieId] || {}

        setMovie(currentMovie)
      }
    } catch (error) {
      throw new Error(error)
    }
  }

  useEffect(() => {
    _getMovie()
  }, [currentMovieId]) */

  if(movie?.error) {
    return <p>An error occured: {movie?.error}</p>
  }

  return (
    <div>
      <Head>
        <title>Movie Details</title>
        <meta name="description" content="NextJS Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <MovieDeatils movie={movie} />
      </Layout>
    </div>
  )
}

export default MovieDetail